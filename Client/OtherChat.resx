<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>